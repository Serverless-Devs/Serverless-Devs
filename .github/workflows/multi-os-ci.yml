name: Scheduled Multi-OS CI

on:
  schedule:
    # At 00:00 (midnight) every day
    - cron: '30 1 * * *'
  workflow_dispatch:

jobs:
  Package-test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
          - os: ubuntu-latest
            container: debian:latest
          - os: ubuntu-latest
            container: centos:latest

    runs-on: ${{ matrix.os }}

    # Only define container if it is present in the matrix
    container: ${{ matrix.container || '' }}

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install --registry="https://registry.npmjs.org"
      - name: Build
        run: npm run build:ci

      - name: Run tests on Linux
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')
        run: |
          echo "Running tests on Linux or MacOS"
          ./bin/s config add --AccessKeyID ${{secrets.ALIYUN_ACCESS_KEY_ID}} --AccessKeySecret ${{secrets.ALIYUN_ACCESS_KEY_SECRET}} --AccountID ${{secrets.ALIYUN_ACCOUNT_ID}} -f -a default
          npm run test


      - name: Run tests on Windows
        if: contains(matrix.os, 'windows')
        run: |
          # Add setup steps for Windows
          # And then run your test commands
          echo "Running tests on Windows"
          ./bin/s.cmd config add --AccessKeyID ${{secrets.ALIYUN_ACCESS_KEY_ID}} --AccessKeySecret ${{secrets.ALIYUN_ACCESS_KEY_SECRET}} --AccountID ${{secrets.ALIYUN_ACCOUNT_ID}} -f -a default
          npm run test

  Binary-test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
          - os: ubuntu-latest
            container: debian:latest
          - os: ubuntu-latest
            container: centos:latest

    runs-on: ${{ matrix.os }}

    # Only define container if it is present in the matrix
    container: ${{ matrix.container || '' }}

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install --registry="https://registry.npmjs.org"
      - run: npm run build:ci
      - name: Build binary package
        run: npm run pkg
      - name: Set Permissions Linux/MacOS
        if: runner.os != 'Windows'
        run: chmod +x ./releases/s-${{ runner.os == 'Linux' && 'linux' || 'macos' }}
      - name: Run Tests
        if: runner.os != 'Windows'
        run: ./releases/s-${{ runner.os == 'Linux' && 'linux' || 'macos' }} -v
      - name: Run Tests
        if: runner.os == 'Windows'
        run: ./releases/s-win.exe -v

  NPM-test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
          - os: ubuntu-latest
            container: debian:latest
          - os: ubuntu-latest
            container: centos:latest

    runs-on: ${{ matrix.os }}

    # Only define container if it is present in the matrix
    container: ${{ matrix.container || '' }}

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install s
        run: npm install @serverless-devs/s -g --registry="https://registry.npmjs.org"
      - name: Run Tests
        run: s -v
      - name: Install s3
        run: npm install @serverless-devs/s3 -g --registry="https://registry.npmjs.org" --force
      - name: Run Tests
        run: s -v
